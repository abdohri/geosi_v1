using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.SqlClient;
using Ext.Net;
using System.Threading;
using System.Globalization;
using GeoSI.Website.Common;
using iTextSharp.text;
using iTextSharp.text.pdf;
using System.Data;
using System.Configuration;
using System.Web.Security;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.IO;
using System.Reflection;

namespace GeoSI.Website.Modules.RapportPOI
{

    public partial class GenererPdf : Form
    {

        protected void Page_Load(object sender, EventArgs e)
        {
            this.SetNomModule("Vehicules");
            this.PreSchema("Vehicules", "VehiculeId");
            if (!X.IsAjaxRequest)
            {   
                    string id = Request.Params.Get("id").ToString();
                    if (id != "0")
                    {
                        this.InitForm(id, this.UserForm);


                    }

                    // Remplissage des combobox existant dans la forme
                    string _marque = "select marquevehiculeid,libelle from marquevehicule where actif='1' and ClientId=-1 or ClientId=" + this.getCurrentUser().getClientId();
                    this.FillStore(_marque, this.Store2);

                    string _type = "select typevehiculeid,libelle from typevehicule where actif='1' and clientid=-1 or clientid=" + this.getCurrentUser().getClientId();
                    this.FillStore(_type, this.Store3);


                    string _comboBoitier = "select boitierid,imei from boitier where actif='1' and ClientId=" + this.getCurrentUser().getClientId() + " and BoitierId NOT IN (select BoitierId from affectation_vehicule_boitier where ClientId=" + this.getCurrentUser().getClientId() + " and actif='1')";
                    this.FillStore(_comboBoitier, this.Store4);

                    string _comboPersonnel = "Select personnelid,nom+' '+prenom nom From personnel where actif='1' and clientid=" + this.getCurrentUser().getClientId() + " and personnelid not in(select personnelid from vehicule_personnel where actif='1')";
                    this.FillStore(_comboPersonnel, this.Store5);
                

            }
        }

        private DataTable GetData(string query)
        {



            ///////////////////////////////////////////////////////////////////

            string conString = ConfigurationManager.ConnectionStrings["SQLConnString"].ConnectionString;
            SqlCommand cmd = new SqlCommand(query);
            SqlConnection con = new SqlConnection(conString);

            SqlDataAdapter sda = new SqlDataAdapter();
            cmd.Connection = con;

            sda.SelectCommand = cmd;
            DataTable dt = new DataTable();

            sda.Fill(dt);
            return dt;


        }


        [DirectMethod(ShowMask = true, Msg = "Loading...")]
        public void GeneratePDF()
        {
            string _dateDebut = this.DateField1.Text.ToString();
            string _dateFin = this.DateField2.Text.ToString();
            string _id = this.vehiculeid.Text.ToString();
            string _req = "select v.vehiculeid ,v.matricule [matricule],v.code [code],v.imgVehicule [imgVehicule],v.numero_chassis [numero_chassis],v.modele [modele],v.consommation [consommation],v.kilometrage [kilometrage],m.libelle marquevehicule ,t.libelle typevehicule from vehicules v "
                                + "left join typevehicule t on v.typevehiculeid=t.typevehiculeid "
                                 + "left join marquevehicule m on  v.marquevehiculeid=m.marquevehiculeid "
                                + "where v.clientid=" + this.getCurrentUser().getClientId() + "and v.vehiculeid=" + _id + " and v.actif='1' order by v.vehiculeid desc";
            DataRow dr = GetData(_req).Rows[0]; ; ;
            Document document = new Document(PageSize.A4, 88f, 88f, 10f, 10f);
            Font NormalFont = FontFactory.GetFont("Arial", 12, Font.NORMAL, Color.BLACK);
            using (System.IO.MemoryStream memoryStream = new System.IO.MemoryStream())
            {
                PdfWriter writer = PdfWriter.GetInstance(document, memoryStream);
                Phrase phrase = null;
                PdfPCell cell = null;
                PdfPTable table = null;
                Color color = null;

                document.Open();

                //Header Table
                table = new PdfPTable(2);
                table.TotalWidth = 500f;
                table.LockedWidth = true;
                table.SetWidths(new float[] { 0.3f, 0.7f });

                //Company Logo
                cell = ImageCell("~/Ressources/Images/logo.png", 30f, PdfPCell.ALIGN_CENTER);
                table.AddCell(cell);

                //Company Name and Address
                phrase = new Phrase();
                phrase.Add(new Chunk("Le rapport d'activité \n\n", FontFactory.GetFont("Arial", 16, Font.BOLD, Color.BLUE)));
                phrase.Add(new Chunk("Site web : www.geomtec.ma\n", FontFactory.GetFont("Arial", 10, Font.NORMAL, Color.BLACK)));
                phrase.Add(new Chunk("E-mail :support@geomtec.com\n", FontFactory.GetFont("Arial", 10, Font.NORMAL, Color.BLACK)));
                phrase.Add(new Chunk("Tel :05.22.30.31.00 ", FontFactory.GetFont("Arial", 10, Font.NORMAL, Color.BLACK)));
                cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT);
                cell.VerticalAlignment = PdfCell.ALIGN_TOP;
                table.AddCell(cell);

                //Separater Line
                color = new Color(System.Drawing.ColorTranslator.FromHtml("#A9A9A9"));
                DrawLine(writer, 25f, document.Top - 79f, document.PageSize.Width - 25f, document.Top - 79f, color);
                DrawLine(writer, 25f, document.Top - 80f, document.PageSize.Width - 25f, document.Top - 80f, color);
                document.Add(table);

                table = new PdfPTable(2);
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_LEFT;
                table.SetWidths(new float[] { 0.3f, 1f });
                table.SpacingBefore = 20f;

                //Employee Details
                cell = PhraseCell(new Phrase("\n Information véhicule \n", FontFactory.GetFont("Arial", 12, Font.UNDERLINE, Color.BLACK)), PdfPCell.ALIGN_CENTER);
                cell.Colspan = 2;
                table.AddCell(cell);
                cell = PhraseCell(new Phrase(), PdfPCell.ALIGN_CENTER);
                cell.Colspan = 2;
                cell.PaddingBottom = 30f;
                table.AddCell(cell);

                //Photo
                /*cell = ImageCell(string.Format("~/photos/{0}.jpg", dr["EmployeeId"]), 25f, PdfPCell.ALIGN_CENTER);
                table.AddCell(cell);*/

                //Name
                phrase = new Phrase();
                phrase.Add(new Chunk("Le matricule : " + dr["matricule"] + "\n", FontFactory.GetFont("Arial", 10, Font.BOLD, Color.BLACK)));

                cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT);
                cell.VerticalAlignment = PdfPCell.ALIGN_MIDDLE;
                table.AddCell(cell);
                document.Add(table);

                /* 
                 DrawLine(writer, 115f, document.Top - 200f, document.PageSize.Width - 100f, document.Top - 200f, Color.BLACK);*/
                DrawLine(writer, 160f, 80f, 160f, 690f, Color.BLACK);


                table = new PdfPTable(2);
                table.SetWidths(new float[] { 0.5f, 2f });
                table.TotalWidth = 340f;
                table.LockedWidth = true;
                table.SpacingBefore = 20f;
                table.HorizontalAlignment = iTextSharp.text.Element.ALIGN_RIGHT;

                

                table.AddCell(PhraseCell(new Phrase("Le matricule:", FontFactory.GetFont("Arial", 8, Font.BOLD, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                table.AddCell(PhraseCell(new Phrase("" + dr["matricule"], FontFactory.GetFont("Arial", 8, Font.NORMAL, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                cell = PhraseCell(new Phrase(), PdfPCell.ALIGN_CENTER);
                cell.Colspan = 2;
                cell.PaddingBottom = 10f;
                table.AddCell(cell);

                table.AddCell(PhraseCell(new Phrase("Période début:", FontFactory.GetFont("Arial", 8, Font.BOLD, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                table.AddCell(PhraseCell(new Phrase("" + _dateDebut, FontFactory.GetFont("Arial", 8, Font.NORMAL, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                cell = PhraseCell(new Phrase(), PdfPCell.ALIGN_CENTER);
                cell.Colspan = 2;
                cell.PaddingBottom = 10f;
                table.AddCell(cell);


                table.AddCell(PhraseCell(new Phrase("Période fin:", FontFactory.GetFont("Arial", 8, Font.BOLD, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                table.AddCell(PhraseCell(new Phrase("" + _dateFin, FontFactory.GetFont("Arial", 8, Font.NORMAL, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                cell = PhraseCell(new Phrase(), PdfPCell.ALIGN_CENTER);
                cell.Colspan = 2;
                cell.PaddingBottom = 10f;
                table.AddCell(cell);



                //table.AddCell(PhraseCell(new Phrase("Le modele:", FontFactory.GetFont("Arial", 8, Font.BOLD, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //table.AddCell(PhraseCell(new Phrase("000" + dr["modele"], FontFactory.GetFont("Arial", 8, Font.NORMAL, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //cell = PhraseCell(new Phrase(), PdfPCell.ALIGN_CENTER);
                //cell.Colspan = 2;
                //cell.PaddingBottom = 10f;
                //table.AddCell(cell);


                ////Address
                //table.AddCell(PhraseCell(new Phrase("Consommation:", FontFactory.GetFont("Arial", 8, Font.BOLD, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //phrase = new Phrase(new Chunk(dr["consommation"] + " L" + "\n", FontFactory.GetFont("Arial", 8, Font.NORMAL, Color.BLACK)));
                //table.AddCell(PhraseCell(phrase, PdfPCell.ALIGN_LEFT));
                //cell = PhraseCell(new Phrase(), PdfPCell.ALIGN_CENTER);
                //cell.Colspan = 2;
                //cell.PaddingBottom = 10f;
                //table.AddCell(cell);



                ////Phone
                //table.AddCell(PhraseCell(new Phrase("Kilometrage:", FontFactory.GetFont("Arial", 8, Font.BOLD, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //table.AddCell(PhraseCell(new Phrase(dr["kilometrage"] + " Km ", FontFactory.GetFont("Arial", 8, Font.NORMAL, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //cell = PhraseCell(new Phrase(), PdfPCell.ALIGN_CENTER);
                //cell.Colspan = 2;
                //cell.PaddingBottom = 10f;
                //table.AddCell(cell);


                //table.AddCell(PhraseCell(new Phrase("Le modele:", FontFactory.GetFont("Arial", 8, Font.BOLD, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //table.AddCell(PhraseCell(new Phrase("000" + dr["modele"], FontFactory.GetFont("Arial", 8, Font.NORMAL, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //cell = PhraseCell(new Phrase(), PdfPCell.ALIGN_CENTER);
                //cell.Colspan = 2;
                //cell.PaddingBottom = 10f;
                //table.AddCell(cell);

                //table.AddCell(PhraseCell(new Phrase("Numero chassis:", FontFactory.GetFont("Arial", 8, Font.BOLD, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //table.AddCell(PhraseCell(new Phrase(dr["numero_chassis"] + "", FontFactory.GetFont("Arial", 8, Font.NORMAL, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //cell = PhraseCell(new Phrase(), PdfPCell.ALIGN_CENTER);
                //cell.Colspan = 2;
                //cell.PaddingBottom = 10f;
                //table.AddCell(cell);


                //table.AddCell(PhraseCell(new Phrase("marquevehicule:", FontFactory.GetFont("Arial", 8, Font.BOLD, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //table.AddCell(PhraseCell(new Phrase(dr["marquevehicule"] + "", FontFactory.GetFont("Arial", 8, Font.NORMAL, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //cell = PhraseCell(new Phrase(), PdfPCell.ALIGN_CENTER);
                //cell.Colspan = 2;
                //cell.PaddingBottom = 10f;
                //table.AddCell(cell);



                //table.AddCell(PhraseCell(new Phrase("typevehicule:", FontFactory.GetFont("Arial", 8, Font.BOLD, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //table.AddCell(PhraseCell(new Phrase(dr["typevehicule"] + "", FontFactory.GetFont("Arial", 8, Font.NORMAL, Color.BLACK)), PdfPCell.ALIGN_LEFT));
                //cell = PhraseCell(new Phrase(), PdfPCell.ALIGN_CENTER);
                //cell.Colspan = 2;
                //cell.PaddingBottom = 10f;
                //table.AddCell(cell);

                document.Add(table);
                document.Close();
                byte[] bytes = memoryStream.ToArray();
                memoryStream.Close();
                Response.Clear();
                Response.ContentType = "application/pdf";
                Response.AddHeader("Content-Disposition", "attachment; filename=Rapport_" + dr["matricule"] + ".pdf");
                Response.ContentType = "application/pdf";
                Response.Buffer = true;
                Response.Cache.SetCacheability(HttpCacheability.NoCache);
                Response.BinaryWrite(bytes);
                Response.End();
                Response.Close();
            }
        }

        private static void DrawLine(PdfWriter writer, float x1, float y1, float x2, float y2, Color color)
        {
            PdfContentByte contentByte = writer.DirectContent;
            contentByte.SetColorStroke(color);
            contentByte.MoveTo(x1, y1);
            contentByte.LineTo(x2, y2);
            contentByte.Stroke();
        }
        private static PdfPCell PhraseCell(Phrase phrase, int align)
        {
            PdfPCell cell = new PdfPCell(phrase);
            cell.BorderColor = Color.WHITE;
            cell.VerticalAlignment = PdfCell.ALIGN_TOP;
            cell.HorizontalAlignment = align;
            cell.PaddingBottom = 2f;
            cell.PaddingTop = 0f;
            return cell;
        }
        private static PdfPCell ImageCell(string path, float scale, int align)
        {
            iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(path));
            image.ScalePercent(scale);
            PdfPCell cell = new PdfPCell(image);
            cell.BorderColor = Color.WHITE;
            cell.VerticalAlignment = PdfCell.ALIGN_TOP;
            cell.HorizontalAlignment = align;
            cell.PaddingBottom = 0f;
            cell.PaddingTop = 0f;
            return cell;
        }
    }
}
