#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34011
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeoSI.Website
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Geomtec")]
	public partial class linqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertDatatracker(Datatracker instance);
    partial void UpdateDatatracker(Datatracker instance);
    partial void DeleteDatatracker(Datatracker instance);
    #endregion
		
		public linqDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GeomtecConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public linqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public linqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Datatracker> Datatracker
		{
			get
			{
				return this.GetTable<Datatracker>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Datatracker")]
	public partial class Datatracker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _datatrackerid;
		
		private System.Nullable<long> _imei;
		
		private System.Nullable<int> _contact;
		
		private System.Nullable<double> _latitude;
		
		private System.Nullable<double> _longitude;
		
		private System.Nullable<int> _speed;
		
		private string _GPSDateTime;
		
		private string _RTCDateTime;
		
		private string _SendingDateTime;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndatatrackeridChanging(long value);
    partial void OndatatrackeridChanged();
    partial void OnimeiChanging(System.Nullable<long> value);
    partial void OnimeiChanged();
    partial void OncontactChanging(System.Nullable<int> value);
    partial void OncontactChanged();
    partial void OnlatitudeChanging(System.Nullable<double> value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(System.Nullable<double> value);
    partial void OnlongitudeChanged();
    partial void OnspeedChanging(System.Nullable<int> value);
    partial void OnspeedChanged();
    partial void OnGPSDateTimeChanging(string value);
    partial void OnGPSDateTimeChanged();
    partial void OnRTCDateTimeChanging(string value);
    partial void OnRTCDateTimeChanged();
    partial void OnSendingDateTimeChanging(string value);
    partial void OnSendingDateTimeChanged();
    #endregion
		
		public Datatracker()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datatrackerid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long datatrackerid
		{
			get
			{
				return this._datatrackerid;
			}
			set
			{
				if ((this._datatrackerid != value))
				{
					this.OndatatrackeridChanging(value);
					this.SendPropertyChanging();
					this._datatrackerid = value;
					this.SendPropertyChanged("datatrackerid");
					this.OndatatrackeridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imei", DbType="BigInt")]
		public System.Nullable<long> imei
		{
			get
			{
				return this._imei;
			}
			set
			{
				if ((this._imei != value))
				{
					this.OnimeiChanging(value);
					this.SendPropertyChanging();
					this._imei = value;
					this.SendPropertyChanged("imei");
					this.OnimeiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="Int")]
		public System.Nullable<int> contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Float")]
		public System.Nullable<double> latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Float")]
		public System.Nullable<double> longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speed", DbType="Int")]
		public System.Nullable<int> speed
		{
			get
			{
				return this._speed;
			}
			set
			{
				if ((this._speed != value))
				{
					this.OnspeedChanging(value);
					this.SendPropertyChanging();
					this._speed = value;
					this.SendPropertyChanged("speed");
					this.OnspeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSDateTime", DbType="NVarChar(50)")]
		public string GPSDateTime
		{
			get
			{
				return this._GPSDateTime;
			}
			set
			{
				if ((this._GPSDateTime != value))
				{
					this.OnGPSDateTimeChanging(value);
					this.SendPropertyChanging();
					this._GPSDateTime = value;
					this.SendPropertyChanged("GPSDateTime");
					this.OnGPSDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTCDateTime", DbType="NVarChar(50)")]
		public string RTCDateTime
		{
			get
			{
				return this._RTCDateTime;
			}
			set
			{
				if ((this._RTCDateTime != value))
				{
					this.OnRTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._RTCDateTime = value;
					this.SendPropertyChanged("RTCDateTime");
					this.OnRTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingDateTime", DbType="NVarChar(50)")]
		public string SendingDateTime
		{
			get
			{
				return this._SendingDateTime;
			}
			set
			{
				if ((this._SendingDateTime != value))
				{
					this.OnSendingDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SendingDateTime = value;
					this.SendPropertyChanged("SendingDateTime");
					this.OnSendingDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
